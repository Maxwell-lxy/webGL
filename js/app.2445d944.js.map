{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/App.vue?1dc3","webpack:///./src/App.vue","webpack:///./src/views/Home.vue?a93c","webpack:///./src/util/appFunc.js","webpack:///./src/util/Matrix4.js","webpack:///src/views/Home.vue","webpack:///./src/views/Home.vue?493c","webpack:///./src/views/Home.vue","webpack:///./src/router.js","webpack:///./src/store.js","webpack:///./src/main.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","app","jsonpScriptSrc","p","about","exports","module","l","e","promises","installedChunkData","promise","Promise","resolve","reject","onScriptComplete","script","document","createElement","charset","timeout","nc","setAttribute","src","event","onerror","onload","clearTimeout","chunk","errorType","type","realSrc","target","error","Error","request","undefined","setTimeout","head","appendChild","all","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","oe","err","console","jsonpArray","window","oldJsonpFunction","slice","Appvue_type_template_id_0a449b12_render","_vm","this","_h","$createElement","_c","_self","attrs","id","staticRenderFns","component","componentNormalizer","App","Homevue_type_template_id_2fc97fb2_render","width","height","tabindex","on","keydown","onKeydown","mousedown","onMousedown","mousemove","onMousemove","mouseup","onMouseup","_v","Homevue_type_template_id_2fc97fb2_staticRenderFns","loadShader","_ref","gl","source","shader","createShader","shaderSource","compileShader","createProgram","_ref2","vSource","fSource","vertexShader","fragmentShader","program","attachShader","linkProgram","useProgram","windowToWebGL","_ref3","x","y","canvas","rect","getBoundingClientRect","left","top","windowToCanvas","_ref4","bottom","initVertexBuffers","_ref5","vertices","verticesInfo","indices","bindBuffer","ARRAY_BUFFER","createBuffer","bufferData","STATIC_DRAW","forEach","info","attrVar","size","stride","offset","attrLoc","getAttribLocation","vertexAttribPointer","FLOAT","enableVertexAttribArray","ELEMENT_ARRAY_BUFFER","Vector3","v","Float32Array","ele","index","elements","normalize","len","Math","sqrt","reduce","acc","cur","pow","Matrix4","sourceMatrix","classCallCheck","sourceEle","toConsumableArray","createClass","angle","z","rlen","xy","yz","zx","xs","ys","zs","radian","PI","sin","cos","concat","setRotate","other","a","b","ai0","ai1","ai2","ai3","eyeX","eyeY","eyeZ","lookAtX","lookAtY","lookAtZ","upX","upY","upZ","fx","fy","fz","rlf","sx","sy","sz","rls","ux","uy","uz","translate","setLookAt","right","near","far","rw","rh","rd","fovy","aspect","ct","setPerspective","inv","det","Homevue_type_script_lang_js_","lookAt","eye","look","up","g_points","shape","VSHADER_SOURCE","FSHADER_SOURCE","g_mvpMatrix","Matrix4_Matrix4","g_normalMatrix","g_modelMatrix","viewProjMatrix","armPro","ANGLE_STEP","g_arm1Angle","g_joint1Angle","g_joint2Angle","g_joint3Angle","g_matrixStack","dragging","methods","setArmsColorByRandom","color","random","colors","FSIZE","BYTES_PER_ELEMENT","checkLocInArms","picked","u_Clicked","loc","uniform1i","draw","pixels","Uint8Array","readPixels","RGBA","UNSIGNED_BYTE","clientX","clientY","_target$getBoundingCl","factor","dx","dy","which","drawArms","u_MvpMatrix","getUniformLocation","u_LightColor","u_LightDirection","u_AmbientLight","u_NormalMatrix","u_ModelMatrix","u_LightPosition","normals","verCol","arr","verticesColors","_this$lookAt","uniform3f","lightDirection","uniform3fv","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","baseHeight","setTranslate","rotate","drawBox","depth","arm1Length","arm2Length","palmLength","pop","requestAnimationFrame","_this$armPro","scale","uniformMatrix4fv","set","multiply","setInverseOf","transpose","drawElements","TRIANGLES","init","getElementById","focus","getContext","a_PointSize","u_FragColor","vertexAttrib1f","uniform4f","clearColor","enable","DEPTH_TEST","addPoint","a_Position","point","vertexAttrib3f","uniform4fv","drawArrays","POINTS","mounted","views_Homevue_type_script_lang_js_","Home_component","Home","Vue","use","Router","router","routes","path","then","Vuex","store","Store","state","mutations","actions","config","productionTip","render","h","$mount"],"mappings":"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","file":"js/app.2445d944.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// script path function\n \tfunction jsonpScriptSrc(chunkId) {\n \t\treturn __webpack_require__.p + \"js/\" + ({\"about\":\"about\"}[chunkId]||chunkId) + \".\" + {\"about\":\"dcb739c9\"}[chunkId] + \".js\"\n \t}\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId) {\n \t\tvar promises = [];\n\n\n \t\t// JSONP chunk loading for javascript\n\n \t\tvar installedChunkData = installedChunks[chunkId];\n \t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n \t\t\t// a Promise means \"currently loading\".\n \t\t\tif(installedChunkData) {\n \t\t\t\tpromises.push(installedChunkData[2]);\n \t\t\t} else {\n \t\t\t\t// setup Promise in chunk cache\n \t\t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\t\tinstalledChunkData = installedChunks[chunkId] = [resolve, reject];\n \t\t\t\t});\n \t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n \t\t\t\t// start chunk loading\n \t\t\t\tvar script = document.createElement('script');\n \t\t\t\tvar onScriptComplete;\n\n \t\t\t\tscript.charset = 'utf-8';\n \t\t\t\tscript.timeout = 120;\n \t\t\t\tif (__webpack_require__.nc) {\n \t\t\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n \t\t\t\t}\n \t\t\t\tscript.src = jsonpScriptSrc(chunkId);\n\n \t\t\t\tonScriptComplete = function (event) {\n \t\t\t\t\t// avoid mem leaks in IE.\n \t\t\t\t\tscript.onerror = script.onload = null;\n \t\t\t\t\tclearTimeout(timeout);\n \t\t\t\t\tvar chunk = installedChunks[chunkId];\n \t\t\t\t\tif(chunk !== 0) {\n \t\t\t\t\t\tif(chunk) {\n \t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n \t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n \t\t\t\t\t\t\tvar error = new Error('Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')');\n \t\t\t\t\t\t\terror.type = errorType;\n \t\t\t\t\t\t\terror.request = realSrc;\n \t\t\t\t\t\t\tchunk[1](error);\n \t\t\t\t\t\t}\n \t\t\t\t\t\tinstalledChunks[chunkId] = undefined;\n \t\t\t\t\t}\n \t\t\t\t};\n \t\t\t\tvar timeout = setTimeout(function(){\n \t\t\t\t\tonScriptComplete({ type: 'timeout', target: script });\n \t\t\t\t}, 120000);\n \t\t\t\tscript.onerror = script.onload = onScriptComplete;\n \t\t\t\tdocument.head.appendChild(script);\n \t\t\t}\n \t\t}\n \t\treturn Promise.all(promises);\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// on error function for async loading\n \t__webpack_require__.oe = function(err) { console.error(err); throw err; };\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('router-view')],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=0a449b12&\"\nvar script = {}\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('canvas',{attrs:{\"id\":\"webgl\",\"width\":\"400\",\"height\":\"400\",\"tabindex\":\"1\"},on:{\"keydown\":_vm.onKeydown,\"mousedown\":_vm.onMousedown,\"mousemove\":_vm.onMousemove,\"mouseup\":_vm.onMouseup}},[_vm._v(\"\\n        Please use a browser that supports \\\"canvas\\\"\\n    \")]),_c('p',[_vm._v(\"1)⬅➡⬆⬇: 调整角度\")]),_c('p',[_vm._v(\"2)zwcv: 调整手掌、手指角度\")]),_c('p',[_vm._v(\"3)鼠标拖拽旋转\")]),_c('p',[_vm._v(\"4)选中手臂改变颜色\")])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","export function loadShader({ gl, type, source }) {\r\n    let shader = gl.createShader(gl[type]);\r\n    // Set the shader program\r\n    gl.shaderSource(shader, source);\r\n    // Compile the shader\r\n    gl.compileShader(shader);\r\n    return shader;\r\n}\r\n\r\nexport function createProgram({ gl, vSource, fSource }) {\r\n    // Initialize shaders\r\n    let vertexShader = loadShader({ type: 'VERTEX_SHADER', source: vSource, gl });\r\n    let fragmentShader = loadShader({ type: 'FRAGMENT_SHADER', source: fSource, gl });\r\n    // Create a program object\r\n    let program = gl.createProgram();\r\n    // Attach the shader objects\r\n    gl.attachShader(program, vertexShader);\r\n    gl.attachShader(program, fragmentShader);\r\n\r\n    // Link the program object\r\n    gl.linkProgram(program);\r\n    gl.useProgram(program);\r\n    return program;\r\n}\r\n\r\nexport function windowToWebGL({x, y, canvas }) {\r\n    let rect = canvas.getBoundingClientRect();\r\n    x = ((x - rect.left) - canvas.width/2)/(canvas.width/2);\r\n    y = (canvas.height/2 - (y - rect.top))/(canvas.height/2);\r\n    return { x, y }\r\n}\r\n\r\nexport function windowToCanvas({ x, y, canvas }) {\r\n    let rect = canvas.getBoundingClientRect();\r\n    return {\r\n        x: x - rect.left,\r\n        y: rect.bottom - y\r\n    }\r\n}\r\n\r\nexport function initVertexBuffers({ gl, vertices, program, verticesInfo, indices }) {\r\n    // Bind the buffer object to target\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, gl.createBuffer());\r\n    // Write date into the buffer object\r\n    gl.bufferData(gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW);\r\n\r\n    verticesInfo.forEach(info => {\r\n        let { attrVar, size, stride, offset } = info;\r\n        let attrLoc = gl.getAttribLocation(program, attrVar);\r\n        // Assign the buffer object to attrLoc variable\r\n        gl.vertexAttribPointer(attrLoc, size, gl.FLOAT, false, stride, offset);\r\n        // Enable the assignment to attrLoc variable\r\n        gl.enableVertexAttribArray(attrLoc);\r\n    });\r\n    if (indices) {\r\n        // Write the indices to the buffer object\r\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, gl.createBuffer());\r\n        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, indices, gl.STATIC_DRAW);\r\n    }\r\n}\r\nexport function initTextures({ gl, program, uniformVar, imgSrc, count, canDraw = true, textUnit = 0 }) {\r\n    // Get the storage location of uniformVar\r\n    let uniformLoc = gl.getUniformLocation(program, uniformVar);\r\n    let image = new Image();  // Create the image object\r\n    // Register the event handler to be called on loading an image\r\n    image.onload = function(){ loadTexture({ gl, uniformLoc, image, count, canDraw, textUnit }); };\r\n    // Tell the browser to load an image\r\n    image.src = imgSrc;\r\n}\r\n\r\nexport function loadTexture({ gl, uniformLoc, image, count, textUnit, canDraw }) {\r\n    let texture = gl.createTexture();\r\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, 1); // Flip the image's y axis\r\n    // Enable texture unit0\r\n    gl.activeTexture(gl[`TEXTURE${ textUnit }`]);\r\n    // Bind the texture object to the target\r\n    gl.bindTexture(gl.TEXTURE_2D, texture);\r\n\r\n    // Set the texture parameters\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\r\n    // Set the texture image\r\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\r\n\r\n    // Set the texture unit 0 to the sampler\r\n    gl.uniform1i(uniformLoc, textUnit);\r\n    if (canDraw) {\r\n        gl.clear(gl.COLOR_BUFFER_BIT);\r\n        gl.drawArrays(gl.TRIANGLE_STRIP, 0, count); // Draw the rectangle\r\n    }\r\n}\r\n\r\n\r\nexport function Vector3 (src) {\r\n    let v = new Float32Array(3);\r\n    src.forEach((ele, index) => {\r\n       v[index] = ele;\r\n    });\r\n    this.elements = v;\r\n}\r\n\r\n/**\r\n * Normalize.\r\n * @return this\r\n */\r\nVector3.prototype.normalize = function() {\r\n    let v = this.elements;\r\n    let len = Math.sqrt(v.reduce((acc, cur) => { return acc += cur ** 2 }, 0));\r\n    if(len){\r\n        if(len === 1) return this;\r\n    } else {\r\n        v.forEach((ele, index) => v[index] = 0);\r\n        return this;\r\n    }\r\n    len = 1/len;\r\n    v.forEach((ele, index) => v[index] *= len);\r\n    return this;\r\n};\r\n","/**\r\n * This is a class treating 4x4 matrix.\r\n * This class contains the function that is equivalent to OpenGL matrix stack.\r\n * The matrix after conversion is calculated by multiplying a conversion matrix from the right.\r\n * The matrix is replaced by the calculated result.\r\n */\r\n\r\n/**\r\n * Constructor of Matrix4\r\n * If sourceMatrix is specified, new matrix is initialized by sourceMatrix.\r\n * Otherwise, new matrix is initialized by identity matrix.\r\n * @param sourceMatrix source matrix(option)\r\n */\r\nexport class Matrix4 {\r\n    constructor(sourceMatrix) {\r\n        if (sourceMatrix) {\r\n            let { elements: sourceEle } = sourceMatrix;\r\n            this.elements = new Float32Array([...sourceEle]);\r\n        } else {\r\n            this.elements = new Float32Array([\r\n                1,0,0,0,\r\n                0,1,0,0,\r\n                0,0,1,0,\r\n                0,0,0,1\r\n            ]);\r\n        }\r\n    }\r\n    /**\r\n     * Set the matrix for rotation.\r\n     * The vector of rotation axis may not be normalized.\r\n     * @param angle The angle of rotation (degrees)\r\n     * @param x The X coordinate of vector of rotation axis.\r\n     * @param y The Y coordinate of vector of rotation axis.\r\n     * @param z The Z coordinate of vector of rotation axis.\r\n     * @return this\r\n     */\r\n    setRotate (angle, x, y, z) {\r\n        let s, c, len, rlen, nc, xy, yz, zx, xs, ys, zs;\r\n\r\n        let radian = angle * Math.PI / 180;\r\n        let elements;\r\n\r\n        s = Math.sin(radian);\r\n        c = Math.cos(radian);\r\n\r\n        if (0 !== x && 0 === y && 0 === z) {  // Rotation around X axis\r\n            if (x < 0) {\r\n                s = -s;\r\n            }\r\n            elements = [\r\n                1, 0, 0, 0,\r\n                0, c, s, 0,\r\n                0, -s, c, 0,\r\n                0, 0, 0, 1\r\n            ];\r\n        } else if (0 === x && 0 !== y && 0 === z) { // Rotation around Y axis\r\n            if (y < 0) {\r\n                s = -s;\r\n            }\r\n            elements = [\r\n                c, 0, -s, 0,\r\n                0, 1, 0, 0,\r\n                s, 0, c, 0,\r\n                0, 0, 0, 1\r\n            ];\r\n        } else if (0 === x && 0 === y && 0 !== z) { // Rotation around Z axis\r\n            if (z < 0) {\r\n                s = -s;\r\n            }\r\n            elements = [\r\n                c, s, 0, 0,\r\n                -s, c, 0, 0,\r\n                0, 0, 1, 0,\r\n                0, 0, 0, 1\r\n            ];\r\n        } else { // Rotation around another axis\r\n            len = Math.sqrt(x*x + y*y + z*z);\r\n            if (len !== 1) {\r\n                rlen = 1 / len;\r\n                x *= rlen;\r\n                y *= rlen;\r\n                z *= rlen;\r\n            }\r\n            nc = 1 - c;\r\n            xy = x * y;\r\n            yz = y * z;\r\n            zx = z * x;\r\n            xs = x * s;\r\n            ys = y * s;\r\n            zs = z * s;\r\n            elements = [\r\n                x*x*nc +  c, xy *nc + zs, zx *nc - ys, 0,\r\n                xy *nc - zs, y*y*nc +  c, yz *nc + xs, 0,\r\n                zx *nc + ys, yz *nc - xs, z*z*nc +  c, 0,\r\n                0, 0, 0, 1\r\n            ];\r\n        }\r\n        this.elements = new Float32Array(elements);\r\n        return this;\r\n    }\r\n    rotate (angle, x, y, z) {\r\n        return this.concat(new Matrix4().setRotate(angle, x, y, z));\r\n    }\r\n    /**\r\n     * Multiply the matrix from the right.\r\n     * @param other The multiply matrix\r\n     * @return this\r\n     */\r\n    concat (other) {\r\n        let i, e, a, b, ai0, ai1, ai2, ai3;\r\n\r\n        // Calculate e = a * b\r\n        e = this.elements;\r\n        a = this.elements;\r\n        b = other.elements;\r\n\r\n        // If e equals b, copy b to temporary matrix.\r\n        if (e === b) {\r\n            b = new Float32Array(16);\r\n            for (i = 0; i < 16; ++i) {\r\n                b[i] = e[i];\r\n            }\r\n        }\r\n\r\n        for (i = 0; i < 4; i++) {\r\n            ai0=a[i];  ai1=a[i+4];  ai2=a[i+8];  ai3=a[i+12];\r\n            e[i]    = ai0 * b[0]  + ai1 * b[1]  + ai2 * b[2]  + ai3 * b[3];\r\n            e[i+4]  = ai0 * b[4]  + ai1 * b[5]  + ai2 * b[6]  + ai3 * b[7];\r\n            e[i+8]  = ai0 * b[8]  + ai1 * b[9]  + ai2 * b[10] + ai3 * b[11];\r\n            e[i+12] = ai0 * b[12] + ai1 * b[13] + ai2 * b[14] + ai3 * b[15];\r\n        }\r\n\r\n        return this;\r\n    }\r\n    multiply(other) {\r\n        return this.concat(other);\r\n    }\r\n    /**\r\n     * Set the matrix for translation.\r\n     * @param x The X value of a translation.\r\n     * @param y The Y value of a translation.\r\n     * @param z The Z value of a translation.\r\n     * @return this\r\n     */\r\n    setTranslate (x, y, z) {\r\n        this.elements = new Float32Array([\r\n           1, 0, 0, 0,\r\n           0, 1, 0, 0,\r\n           0, 0, 1, 0,\r\n           x, y, z, 1\r\n        ]);\r\n        return this;\r\n    }\r\n    translate (x, y, z) {\r\n        let { elements: e } = this;\r\n        this.elements = new Float32Array([\r\n            e[0],                                    e[1],                                    e[2],                                    e[3],\r\n            e[4],                                    e[5],                                    e[6],                                    e[7],\r\n            e[8],                                    e[9],                                    e[10],                                   e[11],\r\n            e[12] + e[0] * x + e[4] * y + e[8]  * z, e[13] + e[1] * x + e[5] * y + e[9]  * z, e[14] + e[2] * x + e[6] * y + e[10] * z, e[15] + e[3] * x + e[7] * y + e[11] * z\r\n        ]);\r\n        return this;\r\n    }\r\n    /**\r\n     * Set the matrix for scaling.\r\n     * @param x The scale factor along the X axis\r\n     * @param y The scale factor along the Y axis\r\n     * @param z The scale factor along the Z axis\r\n     * @return this\r\n     */\r\n    setScale (x, y, z) {\r\n        this.elements = new Float32Array([\r\n            x, 0, 0, 0,\r\n            0, y, 0, 0,\r\n            0, 0, z, 0,\r\n            0, 0, 0, 1\r\n        ]);\r\n        return this;\r\n    }\r\n    scale (x, y, z) {\r\n        let { elements: e } = this;\r\n        e[0] *= x;  e[4] *= y;  e[8]  *= z;\r\n        e[1] *= x;  e[5] *= y;  e[9]  *= z;\r\n        e[2] *= x;  e[6] *= y;  e[10] *= z;\r\n        e[3] *= x;  e[7] *= y;  e[11] *= z;\r\n        return this;\r\n    }\r\n    /**\r\n     * Set the viewing matrix.\r\n     * @param eyeX, eyeY, eyeZ The position of the eye point.\r\n     * @param lookAtX, lookAtY, lookAtZ The position of the reference point.\r\n     * @param upX, upY, upZ The direction of the up vector.\r\n     * @return this\r\n     */\r\n    setLookAt (eyeX, eyeY, eyeZ, lookAtX, lookAtY, lookAtZ, upX, upY, upZ) {\r\n        let e, fx, fy, fz, rlf, sx, sy, sz, rls, ux, uy, uz;\r\n\r\n        fx = lookAtX - eyeX;\r\n        fy = lookAtY - eyeY;\r\n        fz = lookAtZ - eyeZ;\r\n\r\n        // Normalize f.\r\n        rlf = 1 / Math.sqrt(fx*fx + fy*fy + fz*fz);\r\n        fx *= rlf;\r\n        fy *= rlf;\r\n        fz *= rlf;\r\n\r\n        // Calculate cross product of f and up.\r\n        sx = fy * upZ - fz * upY;\r\n        sy = fz * upX - fx * upZ;\r\n        sz = fx * upY - fy * upX;\r\n\r\n        // Normalize s.\r\n        rls = 1 / Math.sqrt(sx*sx + sy*sy + sz*sz);\r\n        sx *= rls;\r\n        sy *= rls;\r\n        sz *= rls;\r\n\r\n        // Calculate cross product of s and f.\r\n        ux = sy * fz - sz * fy;\r\n        uy = sz * fx - sx * fz;\r\n        uz = sx * fy - sy * fx;\r\n\r\n        // Set to this.\r\n        e = this.elements;\r\n        e[0] = sx;\r\n        e[1] = ux;\r\n        e[2] = -fx;\r\n        e[3] = 0;\r\n\r\n        e[4] = sy;\r\n        e[5] = uy;\r\n        e[6] = -fy;\r\n        e[7] = 0;\r\n\r\n        e[8] = sz;\r\n        e[9] = uz;\r\n        e[10] = -fz;\r\n        e[11] = 0;\r\n\r\n        e[12] = 0;\r\n        e[13] = 0;\r\n        e[14] = 0;\r\n        e[15] = 1;\r\n\r\n        // Translate.\r\n        return this.translate(-eyeX, -eyeY, -eyeZ);\r\n    }\r\n\r\n    /**\r\n     * Multiply the viewing matrix from the right.\r\n     * @param eyeX, eyeY, eyeZ The position of the eye point.\r\n     * @param lookAtX, lookAtY, lookAtZ The position of the reference point.\r\n     * @param upX, upY, upZ The direction of the up vector.\r\n     * @return this\r\n     */\r\n    lookAt (eyeX, eyeY, eyeZ, lookAtX, lookAtY, lookAtZ, upX, upY, upZ) {\r\n        return this.concat(new Matrix4().setLookAt(eyeX, eyeY, eyeZ, lookAtX, lookAtY, lookAtZ, upX, upY, upZ));\r\n    }\r\n    /**\r\n     * Set the orthographic projection matrix.\r\n     * @param left The coordinate of the left of clipping plane.\r\n     * @param right The coordinate of the right of clipping plane.\r\n     * @param bottom The coordinate of the bottom of clipping plane.\r\n     * @param top The coordinate of the top top clipping plane.\r\n     * @param near The distances to the nearer depth clipping plane. This value is minus if the plane is to be behind the viewer.\r\n     * @param far The distances to the farther depth clipping plane. This value is minus if the plane is to be behind the viewer.\r\n     * @return this\r\n     */\r\n    setOrtho (left, right, bottom, top, near, far) {\r\n        let e, rw, rh, rd;\r\n\r\n        if (left === right || bottom === top || near === far) {\r\n            throw 'null frustum';\r\n        }\r\n\r\n        rw = 1 / (right - left);\r\n        rh = 1 / (top - bottom);\r\n        rd = 1 / (far - near);\r\n\r\n        e = this.elements;\r\n\r\n        e[0]  = 2 * rw;\r\n        e[1]  = 0;\r\n        e[2]  = 0;\r\n        e[3]  = 0;\r\n\r\n        e[4]  = 0;\r\n        e[5]  = 2 * rh;\r\n        e[6]  = 0;\r\n        e[7]  = 0;\r\n\r\n        e[8]  = 0;\r\n        e[9]  = 0;\r\n        e[10] = -2 * rd;\r\n        e[11] = 0;\r\n\r\n        e[12] = -(right + left) * rw;\r\n        e[13] = -(top + bottom) * rh;\r\n        e[14] = -(far + near) * rd;\r\n        e[15] = 1;\r\n\r\n        return this;\r\n    }\r\n    /**\r\n     * Set the perspective projection matrix by fovy and aspect.\r\n     * @param fovy The angle between the upper and lower sides of the frustum.\r\n     * @param aspect The aspect ratio of the frustum. (width/height)\r\n     * @param near The distances to the nearer depth clipping plane. This value must be plus value.\r\n     * @param far The distances to the farther depth clipping plane. This value must be plus value.\r\n     * @return this\r\n     */\r\n    setPerspective (fovy, aspect, near, far) {\r\n        let e, rd, s, ct;\r\n\r\n        if (near === far || aspect === 0) {\r\n            throw 'null frustum';\r\n        }\r\n        if (near <= 0) {\r\n            throw 'near <= 0';\r\n        }\r\n        if (far <= 0) {\r\n            throw 'far <= 0';\r\n        }\r\n\r\n        fovy = Math.PI * fovy / 180 / 2;\r\n        s = Math.sin(fovy);\r\n        if (s === 0) {\r\n            throw 'null frustum';\r\n        }\r\n\r\n        rd = 1 / (far - near);\r\n        ct = Math.cos(fovy) / s;\r\n\r\n        e = this.elements;\r\n\r\n        e[0]  = ct / aspect;\r\n        e[1]  = 0;\r\n        e[2]  = 0;\r\n        e[3]  = 0;\r\n\r\n        e[4]  = 0;\r\n        e[5]  = ct;\r\n        e[6]  = 0;\r\n        e[7]  = 0;\r\n\r\n        e[8]  = 0;\r\n        e[9]  = 0;\r\n        e[10] = -(far + near) * rd;\r\n        e[11] = -1;\r\n\r\n        e[12] = 0;\r\n        e[13] = 0;\r\n        e[14] = -2 * near * far * rd;\r\n        e[15] = 0;\r\n\r\n        return this;\r\n    }\r\n\r\n    perspective (fovy, aspect, near, far) {\r\n        return this.concat(new Matrix4().setPerspective(fovy, aspect, near, far));\r\n    }\r\n    /**\r\n     * Copy matrix.\r\n     * @param src source matrix\r\n     * @return this\r\n     */\r\n    set (src) {\r\n        let i, s, d;\r\n\r\n        s = src.elements;\r\n        d = this.elements;\r\n        if (s === d) {\r\n            return;\r\n        }\r\n\r\n        for (i = 0; i < 16; ++i) {\r\n            d[i] = s[i];\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Transpose the matrix.\r\n     * @return this\r\n     */\r\n    transpose () {\r\n        let e, t;\r\n\r\n        e = this.elements;\r\n\r\n        t = e[ 1];  e[ 1] = e[ 4];  e[ 4] = t;\r\n        t = e[ 2];  e[ 2] = e[ 8];  e[ 8] = t;\r\n        t = e[ 3];  e[ 3] = e[12];  e[12] = t;\r\n        t = e[ 6];  e[ 6] = e[ 9];  e[ 9] = t;\r\n        t = e[ 7];  e[ 7] = e[13];  e[13] = t;\r\n        t = e[11];  e[11] = e[14];  e[14] = t;\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Calculate the inverse matrix of specified matrix, and set to this.\r\n     * @param sourceMatrix The source matrix\r\n     * @return this\r\n     */\r\n    setInverseOf (sourceMatrix) {\r\n        let i, s, d, inv, det;\r\n\r\n        s = sourceMatrix.elements;\r\n        d = this.elements;\r\n        inv = new Float32Array(16);\r\n\r\n        inv[0]  =   s[5]*s[10]*s[15] - s[5] *s[11]*s[14] - s[9] *s[6]*s[15]\r\n            + s[9]*s[7] *s[14] + s[13]*s[6] *s[11] - s[13]*s[7]*s[10];\r\n        inv[4]  = - s[4]*s[10]*s[15] + s[4] *s[11]*s[14] + s[8] *s[6]*s[15]\r\n            - s[8]*s[7] *s[14] - s[12]*s[6] *s[11] + s[12]*s[7]*s[10];\r\n        inv[8]  =   s[4]*s[9] *s[15] - s[4] *s[11]*s[13] - s[8] *s[5]*s[15]\r\n            + s[8]*s[7] *s[13] + s[12]*s[5] *s[11] - s[12]*s[7]*s[9];\r\n        inv[12] = - s[4]*s[9] *s[14] + s[4] *s[10]*s[13] + s[8] *s[5]*s[14]\r\n            - s[8]*s[6] *s[13] - s[12]*s[5] *s[10] + s[12]*s[6]*s[9];\r\n\r\n        inv[1]  = - s[1]*s[10]*s[15] + s[1] *s[11]*s[14] + s[9] *s[2]*s[15]\r\n            - s[9]*s[3] *s[14] - s[13]*s[2] *s[11] + s[13]*s[3]*s[10];\r\n        inv[5]  =   s[0]*s[10]*s[15] - s[0] *s[11]*s[14] - s[8] *s[2]*s[15]\r\n            + s[8]*s[3] *s[14] + s[12]*s[2] *s[11] - s[12]*s[3]*s[10];\r\n        inv[9]  = - s[0]*s[9] *s[15] + s[0] *s[11]*s[13] + s[8] *s[1]*s[15]\r\n            - s[8]*s[3] *s[13] - s[12]*s[1] *s[11] + s[12]*s[3]*s[9];\r\n        inv[13] =   s[0]*s[9] *s[14] - s[0] *s[10]*s[13] - s[8] *s[1]*s[14]\r\n            + s[8]*s[2] *s[13] + s[12]*s[1] *s[10] - s[12]*s[2]*s[9];\r\n\r\n        inv[2]  =   s[1]*s[6]*s[15] - s[1] *s[7]*s[14] - s[5] *s[2]*s[15]\r\n            + s[5]*s[3]*s[14] + s[13]*s[2]*s[7]  - s[13]*s[3]*s[6];\r\n        inv[6]  = - s[0]*s[6]*s[15] + s[0] *s[7]*s[14] + s[4] *s[2]*s[15]\r\n            - s[4]*s[3]*s[14] - s[12]*s[2]*s[7]  + s[12]*s[3]*s[6];\r\n        inv[10] =   s[0]*s[5]*s[15] - s[0] *s[7]*s[13] - s[4] *s[1]*s[15]\r\n            + s[4]*s[3]*s[13] + s[12]*s[1]*s[7]  - s[12]*s[3]*s[5];\r\n        inv[14] = - s[0]*s[5]*s[14] + s[0] *s[6]*s[13] + s[4] *s[1]*s[14]\r\n            - s[4]*s[2]*s[13] - s[12]*s[1]*s[6]  + s[12]*s[2]*s[5];\r\n\r\n        inv[3]  = - s[1]*s[6]*s[11] + s[1]*s[7]*s[10] + s[5]*s[2]*s[11]\r\n            - s[5]*s[3]*s[10] - s[9]*s[2]*s[7]  + s[9]*s[3]*s[6];\r\n        inv[7]  =   s[0]*s[6]*s[11] - s[0]*s[7]*s[10] - s[4]*s[2]*s[11]\r\n            + s[4]*s[3]*s[10] + s[8]*s[2]*s[7]  - s[8]*s[3]*s[6];\r\n        inv[11] = - s[0]*s[5]*s[11] + s[0]*s[7]*s[9]  + s[4]*s[1]*s[11]\r\n            - s[4]*s[3]*s[9]  - s[8]*s[1]*s[7]  + s[8]*s[3]*s[5];\r\n        inv[15] =   s[0]*s[5]*s[10] - s[0]*s[6]*s[9]  - s[4]*s[1]*s[10]\r\n            + s[4]*s[2]*s[9]  + s[8]*s[1]*s[6]  - s[8]*s[2]*s[5];\r\n\r\n        det = s[0]*inv[0] + s[1]*inv[4] + s[2]*inv[8] + s[3]*inv[12];\r\n        if (det === 0) {\r\n            return this;\r\n        }\r\n\r\n        det = 1 / det;\r\n        for (i = 0; i < 16; i++) {\r\n            d[i] = inv[i] * det;\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n}","<template>\n    <div>\n        <canvas id=\"webgl\" width=\"400\" height=\"400\"\n                @keydown=\"onKeydown\"\n                @mousedown=\"onMousedown\"\n                @mousemove=\"onMousemove\"\n                @mouseup=\"onMouseup\"\n                tabindex=\"1\">\n            Please use a browser that supports \"canvas\"\n        </canvas>\n        <p>1)⬅➡⬆⬇: 调整角度</p>\n        <p>2)zwcv: 调整手掌、手指角度</p>\n        <p>3)鼠标拖拽旋转</p>\n        <p>4)选中手臂改变颜色</p>\n    </div>\n</template>\n\n\n<script>\n    import { Vector3, createProgram, windowToWebGL, initVertexBuffers, windowToCanvas } from \"../util/appFunc\";\n    import { Matrix4 } from \"../util/Matrix4\";\n\n    export default {\n        data() {\n            return {\n                lookAt: {\n                    eye: {\n                        x: 20,\n                        y: 10,\n                        z: 30\n                    },\n                    look: {\n                        x: 0,\n                        y: 0,\n                        z: 0\n                    },\n                    up: {\n                        x: 0,\n                        y: 1,\n                        z: 0\n                    }\n                },\n                canvas: null,\n                gl: null,\n                g_points: [],\n                program: null,\n                shape: null,\n                VSHADER_SOURCE:\n                    'uniform mat4 u_MvpMatrix;\\n' +\n                    'uniform mat4 u_ModelMatrix;\\n' + // Model matrix\n                    'uniform mat4 u_NormalMatrix;\\n'+ // Transformation matrix of normal\n                    'attribute vec4 a_Normal;\\n' + // Normal\n                    'uniform vec3 u_LightColor;\\n' + // Light color\n                    'uniform vec3 u_LightDirection;\\n' + // world coordinate, normalized\n                    'uniform vec3 u_LightPosition;\\n' + // Position of the light source (in the world coordinate system)\n                    'uniform vec3 u_AmbientLight;\\n' + // Color of an ambient light\n                    'attribute vec4 a_Position;\\n' +\n                    'attribute float a_PointSize;\\n' +\n                    'attribute vec4 a_Color;\\n' +\n                    'varying vec4 v_Color;\\n' + // varying variable\n                    'uniform bool u_Clicked;\\n' + // Mouse is clicked\n                    'varying vec3 v_Normal;\\n' +\n                    'varying vec3 v_Position;\\n' +\n                'void main() {\\n' +\n                        'gl_Position = u_MvpMatrix * a_Position;\\n' +\n                        'gl_PointSize = a_PointSize;\\n' +                    // Set the point size\n                        // Recalculate normal with normal matrix and make its length 1.0\n                        ' vec3 normal = normalize(vec3(u_NormalMatrix * a_Normal));\\n' +\n\n                        // 点光源\n                        // Calculate the world coordinate of the vertex\n                        ' vec4 vertexPosition = u_ModelMatrix * a_Position;\\n' +\n                        // Calculate the light direction and make it 1.0 in length\n                        ' vec3 lightDirection = normalize(u_LightPosition - vec3(vertexPosition));\\n' +\n                        ' float nDotL = max(dot(lightDirection, normal), 0.0);\\n' +\n\n                        // 平行光\n                        // Dot product of light direction and orientation of a surface\n                        // ' float nDotL = max(dot(u_LightDirection, normal), 0.0);\\n' +\n\n                        // Calculate the color due to diffuse reflection\n                        ' vec3 diffuse = u_LightColor * vec3(a_Color) * nDotL;\\n' +\n                        // Calculate the color due to ambient reflection\n                        ' vec3 ambient = u_AmbientLight * a_Color.rgb;\\n' +\n                        ' if (u_Clicked) {\\n' +\n                        // Draw in red if mouse is clicked\n                        '   v_Color = vec4(1.0, 0.0, 0.0, 1.0);\\n' +\n                        ' } else {\\n' +\n                        // Add surface colors due to diffuse and ambient reflection\n                        '   v_Color = vec4(diffuse + ambient, a_Color.a);\\n' +\n                        ' }\\n' +\n                    '}\\n',\n\n                // Fragment shader program\n                FSHADER_SOURCE:\n                    'precision mediump float;\\n' +\n                    'varying vec4 v_Color;\\n' +\n                    'void main() {\\n' +\n                    '  gl_FragColor = v_Color;\\n' + // Receive the data from the vertex shader\n                    '}\\n',\n                g_mvpMatrix: new Matrix4(),\n                g_normalMatrix: new Matrix4(),\n                g_modelMatrix: new Matrix4(),\n                viewProjMatrix: new Matrix4(),\n                armPro: {},\n                ANGLE_STEP: 3.0,    // The increments of rotation angle (degrees)\n                g_arm1Angle: -90.0, // The rotation angle of arm1 (degrees)\n                g_joint1Angle: 0.0, // The rotation angle of joint1 (degrees)\n                g_joint2Angle: 0.0, // The rotation angle of joint2 (degrees)\n                g_joint3Angle: 0.0, // The rotation angle of joint3 (degrees)\n                g_matrixStack: [],\n                angle: {\n                    x: 0,\n                    y: 0\n                },\n                dragging: false,\n                mousedown: {\n                    x: null,\n                    y: null\n                }\n            }\n        },\n        methods: {\n            setArmsColorByRandom() {\n                let color = [Math.random(), Math.random(), Math.random()];\n                let colors = [];\n                let { program, gl } = this;\n                const FSIZE = Float32Array.BYTES_PER_ELEMENT;\n                for (let i=0; i<24; i++) {\n                    colors.push(...color);\n                }\n                initVertexBuffers({\n                    gl,\n                    program,\n                    vertices: new Float32Array(colors),\n                    verticesInfo: [\n                        {\n                            attrVar: 'a_Color',\n                            size: 3,\n                            stride: FSIZE * 3,\n                            offset: 0\n                        },\n                    ],\n                });\n            },\n            checkLocInArms({ x, y }) {\n                let picked = false;\n                let { armPro: { u_Clicked }, gl, canvas } = this;\n                let loc = windowToCanvas({ x, y, canvas });\n                // Pass true to u_Clicked\n                gl.uniform1i(u_Clicked, 1);\n                // Draw arms with red\n                this.draw();\n                // Array for storing the pixel value\n                let pixels = new Uint8Array(4);\n                // Read pixel at the clicked position\n                gl.readPixels(loc.x, loc.y, 1, 1, gl.RGBA, gl.UNSIGNED_BYTE, pixels);\n                // The mouse in on arms if R(pixels[0) is 255\n                if (pixels[0] === 255) {\n                    picked = true;\n                }\n                // Pass false to u_Clicked(rewrite the arms)\n                gl.uniform1i(u_Clicked, 0);\n                return picked;\n            },\n            onMousedown({ clientX: x, clientY: y, target }) {\n                let { left, right, top, bottom } = target.getBoundingClientRect();\n                let { mousedown } = this;\n                // Start dragging if a mouse is in <canvas>\n                if (left <= x && x < right && top <= y && y < bottom) {\n                    this.dragging = true;\n                    mousedown.x = x;\n                    mousedown.y = y;\n                    // 如果点中手臂，则改变手臂颜色\n                    if (this.checkLocInArms({ x, y })) this.setArmsColorByRandom();\n                }\n            },\n            onMousemove({ clientX: x, clientY: y }) {\n                  let { mousedown, dragging, canvas, angle } = this;\n                  if (dragging) {\n                      // The rotation ratio\n                      let factor = 100 / canvas.height;\n                      let dx = factor * (x - mousedown.x);\n                      let dy = factor * (y - mousedown.y);\n                      angle.x += dx;\n                      angle.y += dy;\n                      mousedown.x = x;\n                      mousedown.y = y;\n                  }\n            },\n            onMouseup() {\n                this.dragging = false;\n            },\n            onKeydown({ which }) {\n                let { g_joint1Angle, ANGLE_STEP, g_arm1Angle, g_joint2Angle, g_joint3Angle } = this;\n                switch (which) {\n                    case 38: // Up arrow key -> the positive rotation of joint1 around the z-axis\n                        if (g_joint1Angle < 135.0) this.g_joint1Angle += ANGLE_STEP;\n                        break;\n                    case 40: // Down arrow key -> the negative rotation of joint1 around the z-axis\n                        if (g_joint1Angle > -135.0) this.g_joint1Angle -= ANGLE_STEP;\n                        break;\n                    case 39: // Right arrow key -> the positive rotation of arm1 around the y-axis\n                        this.g_arm1Angle = (g_arm1Angle + ANGLE_STEP) % 360;\n                        break;\n                    case 37: // Left arrow key -> the negative rotation of arm1 around the y-axis\n                        this.g_arm1Angle = (g_arm1Angle - ANGLE_STEP) % 360;\n                        break;\n                    case 90: // Z key -> the positive rotation of joint2\n                        this.g_joint2Angle = (g_joint2Angle + ANGLE_STEP) % 360;\n                        break;\n                    case 88: // X key -> the negative rotation of joint2\n                        this.g_joint2Angle = (g_joint2Angle - ANGLE_STEP) % 360;\n                        break;\n                    case 86: // V key -> the positive rotation of joint3\n                        if (g_joint3Angle < 60.0) this.g_joint3Angle = (g_joint3Angle + ANGLE_STEP) % 360;\n                        break;\n                    case 67: // C key -> the negative rotation of joint3\n                        if (g_joint3Angle > -60.0) this.g_joint3Angle = (g_joint3Angle - ANGLE_STEP) % 360;\n                        break;\n                    default: return; // Skip drawing at no effective action\n                }\n                // Draw the robot arm\n                this.draw();\n            },\n            drawArms() {\n                 let {\n                    gl,\n                    program, canvas, viewProjMatrix } = this;\n                let u_MvpMatrix = gl.getUniformLocation(program, 'u_MvpMatrix');\n                let u_LightColor = gl.getUniformLocation(program, 'u_LightColor');\n                let u_LightDirection = gl.getUniformLocation(program, 'u_LightDirection');\n                let u_AmbientLight = gl.getUniformLocation(program, 'u_AmbientLight');\n                let u_NormalMatrix = gl.getUniformLocation(program, 'u_NormalMatrix');\n                let u_ModelMatrix = gl.getUniformLocation(program, 'u_ModelMatrix');\n                let u_LightPosition = gl.getUniformLocation(program, 'u_LightPosition');\n                let u_Clicked = gl.getUniformLocation(program, 'u_Clicked');\n                this.armPro = {\n                    u_MvpMatrix,\n                    u_LightColor,\n                    u_LightDirection,\n                    u_AmbientLight,\n                    u_NormalMatrix,\n                    u_ModelMatrix,\n                    u_LightPosition,\n                    u_Clicked\n                };\n                const FSIZE = Float32Array.BYTES_PER_ELEMENT;\n                // Create a cube\n                //    v6----- v5\n                //   /|      /|\n                //  v1------v0|\n                //  | |     | |\n                //  | |v7---|-|v4\n                //  |/      |/\n                //  v2------v3\n\n                let vertices = [   // Vertex coordinates\n                    0.5, 1.0, 0.5, -0.5, 1.0, 0.5, -0.5, 0.0, 0.5,  0.5, 0.0, 0.5, // v0-v1-v2-v3 front\n                    0.5, 1.0, 0.5,  0.5, 0.0, 0.5,  0.5, 0.0,-0.5,  0.5, 1.0,-0.5, // v0-v3-v4-v5 right\n                    0.5, 1.0, 0.5,  0.5, 1.0,-0.5, -0.5, 1.0,-0.5, -0.5, 1.0, 0.5, // v0-v5-v6-v1 up\n                    -0.5, 1.0, 0.5, -0.5, 1.0,-0.5, -0.5, 0.0,-0.5, -0.5, 0.0, 0.5, // v1-v6-v7-v2 left\n                    -0.5, 0.0,-0.5,  0.5, 0.0,-0.5,  0.5, 0.0, 0.5, -0.5, 0.0, 0.5, // v7-v4-v3-v2 down\n                    0.5, 0.0,-0.5, -0.5, 0.0,-0.5, -0.5, 1.0,-0.5,  0.5, 1.0,-0.5  // v4-v7-v6-v5 back\n                ];\n\n                let colors = [     // Colors\n                    0.4, 0.4, 1.0,  0.4, 0.4, 1.0,  0.4, 0.4, 1.0,  0.4, 0.4, 1.0,  // v0-v1-v2-v3 front(blue)\n                    0.4, 1.0, 0.4,  0.4, 1.0, 0.4,  0.4, 1.0, 0.4,  0.4, 1.0, 0.4,  // v0-v3-v4-v5 right(green)\n                    1.0, 0.4, 0.4,  1.0, 0.4, 0.4,  1.0, 0.4, 0.4,  1.0, 0.4, 0.4,  // v0-v5-v6-v1 up(red)\n                    1.0, 1.0, 0.4,  1.0, 1.0, 0.4,  1.0, 1.0, 0.4,  1.0, 1.0, 0.4,  // v1-v6-v7-v2 left\n                    1.0, 1.0, 1.0,  1.0, 1.0, 1.0,  1.0, 1.0, 1.0,  1.0, 1.0, 1.0,  // v7-v4-v3-v2 down\n                    0.4, 1.0, 1.0,  0.4, 1.0, 1.0,  0.4, 1.0, 1.0,  0.4, 1.0, 1.0   // v4-v7-v6-v5 back\n                ];\n\n                let normals = new Float32Array([    // Normal\n                    0.0, 0.0, 1.0,   0.0, 0.0, 1.0,   0.0, 0.0, 1.0,   0.0, 0.0, 1.0,  // v0-v1-v2-v3 front\n                    1.0, 0.0, 0.0,   1.0, 0.0, 0.0,   1.0, 0.0, 0.0,   1.0, 0.0, 0.0,  // v0-v3-v4-v5 right\n                    0.0, 1.0, 0.0,   0.0, 1.0, 0.0,   0.0, 1.0, 0.0,   0.0, 1.0, 0.0,  // v0-v5-v6-v1 up\n                    -1.0, 0.0, 0.0,  -1.0, 0.0, 0.0,  -1.0, 0.0, 0.0,  -1.0, 0.0, 0.0,  // v1-v6-v7-v2 left\n                    0.0,-1.0, 0.0,   0.0,-1.0, 0.0,   0.0,-1.0, 0.0,   0.0,-1.0, 0.0,  // v7-v4-v3-v2 down\n                    0.0, 0.0,-1.0,   0.0, 0.0,-1.0,   0.0, 0.0,-1.0,   0.0, 0.0,-1.0   // v4-v7-v6-v5 back\n                ]);\n\n                let verCol = vertices.reduce((acc, cur, index, arr) => {\n                    if (index === 0 || index % 3 === 0) {\n                        acc.push(\n                            cur, arr[index + 1], arr[index + 2],\n                            // colors[index], colors[index + 1], colors[index + 2],\n                            1,0.4,0,\n                            normals[index], normals[index + 1], normals[index + 2]\n                        );\n                    }\n                    return acc;\n                }, []);\n\n                let verticesColors = new Float32Array(verCol);\n\n                let indices = new Uint8Array([       // Indices of the vertices\n                    0, 1, 2,   0, 2, 3,    // front\n                    4, 5, 6,   4, 6, 7,    // right\n                    8, 9,10,   8,10,11,    // up\n                    12,13,14,  12,14,15,    // left\n                    16,17,18,  16,18,19,    // down\n                    20,21,22,  20,22,23     // back\n                ]);\n                let { lookAt: { eye, look, up } } = this;\n                initVertexBuffers({\n                    gl,\n                    program,\n                    vertices: verticesColors,\n                    indices,\n                    verticesInfo: [\n                        {\n                            attrVar: 'a_Position',\n                            size: 3,\n                            stride: FSIZE * 9,\n                            offset: 0\n                        },\n                        {\n                            attrVar: 'a_Color',\n                            size: 3,\n                            stride: FSIZE * 9,\n                            offset: FSIZE * 3\n                        },\n                        {\n                            attrVar: 'a_Normal',\n                            size: 3,\n                            stride: FSIZE * 9,\n                            offset: FSIZE * 6\n                        }\n                    ],\n                });\n                // Pass false to u_Clicked\n                gl.uniform1i(u_Clicked, 0);\n                // Set the light color (white)\n                gl.uniform3f(u_LightColor, 1.0, 1.0, 1.0);\n                // Set the position of the light source (in the world coordinate)\n                gl.uniform3f(u_LightPosition, 0.0, 3.0, 4.0);\n                // Set the light direction (in the world coordinate)\n                let lightDirection = new Vector3([0.5, 3.0, 4.0]);\n                lightDirection.normalize(); // Normalize\n                gl.uniform3fv(u_LightDirection, lightDirection.elements);\n                gl.uniform3f(u_AmbientLight, 0.2, 0.2, 0.2);\n                // viewMatrix.setOrtho(left, right, bottom, top, near, far);\n\n                viewProjMatrix.setPerspective(50, canvas.width/canvas.height, 1, 1000);\n                viewProjMatrix.lookAt(\n                    eye.x, eye.y, eye.z,\n                    look.x, look.y, look.z,\n                    up.x, up.y, up.z\n                );\n\n                this.draw();\n            },\n            draw() {\n                let { gl,\n                    g_arm1Angle,\n                    g_joint1Angle,\n                    g_joint2Angle,\n                    g_matrixStack,\n                    g_joint3Angle,\n                    angle\n                } = this;\n                // Clear color and depth buffer\n                gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n\n                // Draw a base\n                let baseHeight = 2.0;\n                this.g_modelMatrix.setTranslate(0.0, -12.0, 0.0);\n                this.g_modelMatrix.rotate(angle.y, 1, 0, 0);\n                this.g_modelMatrix.rotate(angle.x, 0, 1, 0);\n                this.drawBox({ width: 10.0, height: baseHeight, depth: 10.0 });\n\n\n                // Arm1\n                let arm1Length = 10.0; // Length of arm1\n                // Move onto the base\n                this.g_modelMatrix.translate(0.0, baseHeight, 0.0);\n                this.g_modelMatrix.rotate(g_arm1Angle, 0.0, 1.0, 0.0);    // Rotate around the y-axis\n                this.drawBox({ width: 3.0, height: arm1Length, depth: 3.0 }); // Draw\n\n                // Arm2\n                let arm2Length = 10.0;\n                this.g_modelMatrix.translate(0.0, arm1Length, 0.0);      // Move to joint1\n                this.g_modelMatrix.rotate(g_joint1Angle, 0.0, 0.0, 1.0);  // Rotate around the z-axis\n                this.drawBox({ width: 4.0, height: arm2Length, depth: 4.0 }); // Draw\n\n                //  A palm\n                let palmLength = 2.0;\n                // Move to palm\n                this.g_modelMatrix.translate(0.0, arm2Length, 0.0);\n                // Rotate around the y-axis\n                this.g_modelMatrix.rotate(g_joint2Angle, 0.0, 1.0, 0.0);\n                this.drawBox({ width: 2.0, height: palmLength, depth: 6.0 });\n\n                // Move to the center of the tip of the palm\n                this.g_modelMatrix.translate(0.0, palmLength, 0.0);\n                // Draw finger1\n                g_matrixStack.push(new Matrix4(this.g_modelMatrix));\n                this.g_modelMatrix.translate(0.0, 0.0, 2.0);\n                this.g_modelMatrix.rotate(g_joint3Angle, 1.0, 0.0, 0.0);\n                this.drawBox({ width: 1.0, height: 2.0, depth: 1.0 });\n                this.g_modelMatrix = g_matrixStack.pop();\n\n                // Draw finger2\n                this.g_modelMatrix.translate(0.0, 0.0, -2.0);\n                this.g_modelMatrix.rotate(-g_joint3Angle, 1.0, 0.0, 0.0);\n                this.drawBox({ width: 1.0, height: 2.0, depth: 1.0 });\n                requestAnimationFrame(this.draw);\n            },\n            drawBox({ width, height, depth }) {\n                let { gl, g_mvpMatrix, g_normalMatrix, g_modelMatrix, viewProjMatrix, g_matrixStack } = this;\n                let { armPro: { u_MvpMatrix, u_NormalMatrix, u_ModelMatrix } } = this;\n                // Save the model matrix\n                g_matrixStack.push(new Matrix4(g_modelMatrix));\n                // Scale a cube and draw\n                g_modelMatrix.scale(width, height, depth);\n                // Pass the model matrix to u_ModelMatrix\n                gl.uniformMatrix4fv(u_ModelMatrix, false, g_modelMatrix.elements);\n                // Calculate the model view project matrix and pass it to u_MvpMatrix\n                g_mvpMatrix.set(viewProjMatrix).multiply(g_modelMatrix);\n                gl.uniformMatrix4fv(u_MvpMatrix, false, g_mvpMatrix.elements);\n                // Calculate the normal transformation matrix and pass it to u_NormalMatrix\n                g_normalMatrix.setInverseOf(g_modelMatrix);\n                g_normalMatrix.transpose();\n                gl.uniformMatrix4fv(u_NormalMatrix, false, g_normalMatrix.elements);\n                // Draw\n                gl.drawElements(gl.TRIANGLES, 36, gl.UNSIGNED_BYTE, 0);\n                // Retrieve the model matrix\n                this.g_modelMatrix = g_matrixStack.pop();\n            },\n            init() {\n                let { VSHADER_SOURCE, FSHADER_SOURCE } = this;\n                // Retrieve <canvas> element\n                this.canvas = document.getElementById('webgl');\n                this.canvas.focus();\n                // Get the rendering context for WebGL\n                this.gl = this.canvas.getContext('webgl');\n                let { gl } = this;\n                this.program = createProgram({ gl, vSource: VSHADER_SOURCE, fSource: FSHADER_SOURCE });\n                let a_PointSize = gl.getAttribLocation(this.program, 'a_PointSize');\n                let u_FragColor = gl.getUniformLocation(this.program, 'u_FragColor');\n                gl.vertexAttrib1f(a_PointSize, 10.0);\n                gl.uniform4f(u_FragColor, 0.0, 1.0, 0.0, 1.0);\n                gl.clearColor(0.0, 0.0, 0.0, 1.0);\n                gl.enable(gl.DEPTH_TEST);\n                gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n                // gl.clear(gl.COLOR_BUFFER_BIT);\n            },\n            addPoint(e) {\n                let { canvas, g_points, gl, program } = this;\n                let { clientX: x, clientY: y } = e;\n                let loc = windowToWebGL({ x, y, canvas });\n                let a_Position = gl.getAttribLocation(program, 'a_Position');\n                loc.color = [Math.random(), Math.random(), Math.random(), 1.0],\n                g_points.push(loc);\n                gl.clear(gl.COLOR_BUFFER_BIT);\n                g_points.forEach(point => {\n                    let { x, y, color } = point;\n                    let u_FragColor = gl.getUniformLocation(program, 'u_FragColor');\n                    gl.vertexAttrib3f(a_Position, x, y, 0.0);\n                    gl.uniform4fv(u_FragColor, color)\n                    gl.drawArrays(gl.POINTS, 0, 1);\n                });\n            },\n        },\n        mounted() {\n            this.init();\n            this.drawArms();\n        }\n    }\n</script>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Home.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Home.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Home.vue?vue&type=template&id=2fc97fb2&\"\nimport script from \"./Home.vue?vue&type=script&lang=js&\"\nexport * from \"./Home.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Vue from 'vue'\r\nimport Router from 'vue-router'\r\nimport Home from './views/Home.vue'\r\n\r\nVue.use(Router)\r\n\r\nexport default new Router({\r\n  routes: [\r\n    {\r\n      path: '/',\r\n      name: 'home',\r\n      component: Home\r\n    },\r\n    {\r\n      path: '/NVMC',\r\n      name: 'NVMC',\r\n/*      route level code-splitting\r\n      this generates a separate chunk (about.[hash].js) for this route\r\n      which is lazy-loaded when the route is visited.*/\r\n      component: () => import(/* webpackChunkName: \"about\" */ './views/NVMC/index.vue')\r\n    }\r\n  ]\r\n})\r\n","import Vue from 'vue'\r\nimport Vuex from 'vuex'\r\n\r\nVue.use(Vuex)\r\n\r\nexport default new Vuex.Store({\r\n  state: {\r\n\r\n  },\r\n  mutations: {\r\n\r\n  },\r\n  actions: {\r\n\r\n  }\r\n})\r\n","import Vue from 'vue'\r\nimport App from './App.vue'\r\nimport router from './router'\r\nimport store from './store'\r\nimport './assets/scss/style.scss'\r\n\r\nVue.config.productionTip = false\r\n\r\nnew Vue({\r\n  router,\r\n  store,\r\n  render: h => h(App)\r\n}).$mount('#app')\r\n"],"sourceRoot":""}